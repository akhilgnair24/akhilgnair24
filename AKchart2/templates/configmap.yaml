apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ .Release.Name }}-configmap
  labels:
  {{- with .Values.tags }}
    first: {{ .machine }}
    second: {{ .rack }}
    third: {{ .drive }}
  {{- end }}
    helm.sh/chart: "{{ $.Chart.Name }}-{{ $.Chart.Version }}"
    app.kubernetes.io/instance: "{{ $.Release.Name }}"
    app.kubernetes.io/version: "{{ $.Chart.AppVersion }}"
    app.kubernetes.io/managed-by: "{{ $.Release.Service }}"
data:
  myvalue: "Sample Config Map"
  pipeline: {{ .Values.projectCode | upper | quote }} # upper: makes the value to uppercase, quote: qutoing the value
  now: {{ now | date "2006-01-02" | quote }} # now : gives current date, date : format the date in the given format
  contact: {{ .Values.contact | default "1-800-123-0000" | quote }} #get the value and if no value is fetched, assigning a default value.
  #Below is an example of if-else 
  {{- if eq .Values.infra.region "us-w" }}
  ha: "hai"
  {{- else if eq .Values.infra.region "us-e"}}
  ha: true
  {{- end }}
  #example of Scope using with. Only the values coming under tags can be assessed in the below blockk
  {{- with .Values.tags }}
  Machine Type: {{ .machine | default "NA" | quote }}
  Rack ID: {{ .rack | quote }}
  Storage Type: {{ .drive | upper | quote }}
  Video Card: {{ .vcard | quote }}
  {{- end }}
  #Looping
  LangUsed: |-
    {{- range .Values.LangUsed }}
    - {{ . | title | quote }}
    {{- end }}
  #Using variables
    {{- $relname := .Release.Name -}} #this is assiging the variable value so that it will be accessable in 'with' block. '-' is used to avoid any new line . ':= is assigning operator'
  {{- with .Values.tags }}
  Machine Type: {{ .machine | default "NA" | quote }}
  Rack ID: {{ .rack | quote }}
  Storage Type: {{ .drive | upper | quote }}
  Video Card: {{ .vcard | quote }}
  Release: {{ $relname }} # this is retrieving the variable value. 
  {{- end }}
  #Using variable in Range block
  LangUsed: |-
    {{- range $index, $topping := .Values.LangUsed }}
    - {{ $index }} : {{ $topping }}
    {{- end }} 
